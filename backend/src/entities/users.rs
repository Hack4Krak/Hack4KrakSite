//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use super::sea_orm_active_enums::UserRoles;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "users")]
pub struct Model {
    pub username: String,
    pub email: String,
    pub created_at: DateTime,
    pub password: Option<String>,
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: Uuid,
    pub is_leader: bool,
    pub team: Option<Uuid>,
    pub roles: UserRoles,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::team_invites::Entity")]
    TeamInvites,
    #[sea_orm(
        belongs_to = "super::teams::Entity",
        from = "Column::Team",
        to = "super::teams::Column::Id",
        on_update = "SetNull",
        on_delete = "SetNull"
    )]
    Teams,
}

impl Related<super::team_invites::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TeamInvites.def()
    }
}

impl Related<super::teams::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Teams.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
